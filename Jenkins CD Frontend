pipeline {
    agent any
    
    stages {

        stage('Get Artifact') {
            steps {
                cleanWs()

                script {
                    def SERVER_ID = 'artifactoryserver' 
                    def server = Artifactory.server SERVER_ID
                    def build = 'latest'
                    def downloadSpec = 
                    """
                        {
                            "files": [
                                {
                                    "pattern": "lazy-load/frontend/Build: ${build}/(*).zip",
                                    "target": "./{1}.zip",
                                    "flat": true
                                }
                            ]
                        }
                    """
                    server.download(downloadSpec)
                }
            }
        }

        stage('Create Dockerfile') {
            steps {
                script {
                    def archivos=findFiles(glob: '*.zip')
                    def ejecutable="${archivos[0]}"
                    def api_server="http://localhost:9000"
                    def content = 
                        "FROM node:13.8.0-alpine3.11" +
                        "\nEXPOSE 42000" +
                        "\nENV APi_SERVER=$api_server" +
                        "\nADD ${ejecutable} app.zip" +
                        "\nRUN unzip app.zip" +
                        "\nRUN npm install -g @angular/cli@latest" +
                        "\nENTRYPOINT [\"npm\", \"start\"]"
                    writeFile(file: "Dockerfile", text: content, encoding: "UTF-8")
                }
            }
        }

        stage('Push Image to GCR') {
            steps {
                script {
                    def PROJECT_ID="docker-prueba-267806"
                    app = docker.build("gcr.io/${PROJECT_ID}/lazy_load_frontend")
                    docker.withRegistry('https://gcr.io', 'gcr:docker') {
                        app.push("${env.BUILD_NUMBER}")
                        app.push("latest")
                    }
                }
            }
        }
    }
}